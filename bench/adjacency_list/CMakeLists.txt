find_package(OpenMP)
if (OPENMP_FOUND)
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
else ()
    MESSAGE(STATUS "OpenMP is not found. Use single thread in adjacency_list.")
endif ()

add_executable(run_adj_list_bench_stl run_adj_list_bench_stl.cpp)
add_executable(run_adj_list_bench_bip run_adj_list_bench_bip.cpp)
add_executable(run_adj_list_bench_bip_extend run_adj_list_bench_bip_extend.cpp)
add_executable(run_adj_list_bench_metall run_adj_list_bench_metall.cpp)
add_executable(run_adj_list_bench_reflink_snapshot run_adj_list_bench_reflink_snapshot.cpp)

if (MEMKIND_ROOT)
    include_directories(${MEMKIND_ROOT}/include)
    if(UNIX AND NOT APPLE)
        find_library(LIBMEMKIND NAMES memkind PATHS ${MEMKIND_ROOT}/lib)
        if (LIBMEMKIND)
            link_libraries(${LIBMEMKIND})
        else()
            message(FATAL_ERROR "Cannot find memkind library")
        endif ()
    endif()
    add_executable(run_adj_list_bench_pmem run_adj_list_bench_pmem)
endif()

add_subdirectory(edge_generator)
add_subdirectory(test)